"""
Определение динамической вязкости сухого воздуха для t = [-100; 700] С,  p = [0,1; 20] МПа
Методика расчёта взята из документа
'ГСССД 109-87 Воздух сухой. Коэффициенты динамической вязкости и теплопроводности при температурах 150...1000 К и
давлениях от соответствующих разреженному газу до 100 МПа'
"""
import numpy as np
from .calcdryairdens import calc_dryair_dens

__author__ = "Sergey Medvedev"
__copyright__ = "Sergey Medvedev, 2020"
__license__ = "GPL"
__version__ = "1.0"
__maintainer__ = "Sergey Medvedev"
__email__ = "engpython@yandex.ru"
__status__ = "Production"

b = np.array([93.6970, -82.4089, 132.488, -177.977, 73.9072, 20.5440, 137.268,
              -107.034, -27.9017, 29.0736])
r = np.array([1, 1, 2, 3, 3, 3, 4, 4, 5, 5])
tt = np.array([1, 2, 0, 0, 1, 2, 0, 1, 0, 1])
rho_cr = 316.5
T_cr = 132.5
"""Газовая постоянная для сухого воздуха, Дж/кг/К"""
R = 287.1

def calc_dryair_visc(t, p=101325.):
    """
    :param t: температура, С
    :param p: абсолютное давление, Па. Необязательный параметр, по умолчанию принято нормальное атмосферное давление.
    :return: динамическая вязкость, Па*с, плотность, кг/м3
    """
    if not (-100 <= t <= 700 and 0.1e6 <= p <= 20e6):
        raise ValueError('Параметры должны находиться в диапазонах t = [-100; 700] С, p = [0,1; 20] МПа')

    T = t + 273.15
    rho, _ = calc_dryair_dens(t, p)
    om = rho / rho_cr
    tau = T / T_cr
    dv0 = -66.9619 / tau ** 1.5 + 322.119 / tau - 547.958 / tau ** 0.5 + 347.643 + \
          38.4042 * tau - 2.18923 * tau ** 1.5
    ddv = np.sum(b * om ** r / tau ** tt)
    dv = (dv0 + ddv) / 1e7
    return dv, rho
