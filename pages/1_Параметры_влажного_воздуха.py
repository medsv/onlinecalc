import streamlit as st
from libs.wetairprops import calc_d, calc_t_wb, calc_t_dp_d, calc_dens, calc_p_s, calc_I, calc_RH_d
from common.footer import show_footer
from common.print_result import print_result

st.set_page_config(
    page_title="–†–∞—Å—á—ë—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤–ª–∞–∂–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞",
    page_icon="üíª",
    layout="centered"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
if 'rh_d_sel' not in st.session_state:
    st.session_state.rh_d_sel = "RH, %"
if 'rh_d_value' not in st.session_state:
    st.session_state.rh_d_value = 60.0
if 'rh_d_min' not in st.session_state:
    st.session_state.rh_d_min = 0.0
if 'rh_d_max' not in st.session_state:
    st.session_state.rh_d_max = 100.0  # –î–ª—è RH –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
if 'rh_d_format' not in st.session_state:
    st.session_state.rh_d_format = "%0.1f"
if 'rh_d_step' not in st.session_state:
    st.session_state.rh_d_step = 1.

def calc(t: float, RH_d : float, p: float, RH_d_sel: str):
    if p <= 0:
        raise ValueError('–ó–Ω–∞—á–µ–Ω–∏–µ –¥–∞–≤–ª–µ–Ω–∏—è p –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è.')
    if RH_d_sel == 'RH, %':
        # RH –≤ –¥–æ–ª—è—Ö –µ–¥–∏–Ω–∏—Ü—ã, –∞ –Ω–µ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
        RH = RH_d / 100.
        if not (0.<=RH<=1.):
            raise ValueError('–ó–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–π –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ RH –¥–æ–ª–∂–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ (0%; 100%].')
        d: float = calc_d(t, RH, p)
    else:  # d
        if RH_d < 0:
            raise ValueError('–ó–Ω–∞—á–µ–Ω–∏–µ –≤–ª–∞–≥–æ—Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è d –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è.')
        RH: float = calc_RH_d(t, RH_d, p)
        d = RH_d

    p_s: float = calc_p_s(t) 
    p_st: float = p_s * RH
    
    

    d1: float = d / (1 + d / 1000.)  # –Ω–∞ –∫–≥ –≤–ª–∞–∂–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞
    I: float = calc_I(t, RH, p)
    I1: float = I / (1 + d / 1000.)  # –Ω–∞ –∫–≥ –≤–ª–∞–∂–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞
    t_wb: float = calc_t_wb(t, RH, p)
    t_dp: float = calc_t_dp_d(d, p)


    dens: float = calc_dens(t, RH, p)
    p_cond: float = p / RH
    RH *= 100
    return {"t": t, "RH": RH, "p": p, "d": d, "d1": d1, "dens": dens, "t_wb": t_wb, "t_dp": t_dp, "I": I, "I1": I1, "p_s": p_s, "p_st": p_st, "p_cond": p_cond}


def update_rh_d_params():
    if st.session_state.RH_d_sel == "RH, %":
        st.session_state.rh_d_min = 0.0
        st.session_state.rh_d_max = 100.0
        st.session_state.rh_d_value = 60.
        st.session_state.rh_d_format = "%0.1f"
        st.session_state.rh_d_step = 1.
    else:  # "d, –≥/–∫–≥ —Å.–≤."
        st.session_state.rh_d_min = 0.0
        st.session_state.rh_d_max = 1000.0
        st.session_state.rh_d_value = 8.716840927527572
        st.session_state.rh_d_format = "%0.4f"
        st.session_state.rh_d_step = .01

WIDTH: int = 310
COLS_SIZE = [4, 5]
# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.title("–†–∞—Å—á—ë—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤–ª–∞–∂–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞")
st.markdown("–î–∏–∞–ø–∞–∑–æ–Ω –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –æ—Ç -100 ¬∞–° –¥–æ +200 ¬∞–°.")

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏
col1, col2  = st.columns(COLS_SIZE, vertical_alignment="center", width = WIDTH)
with col1:  
    st.write("t, ¬∞–°")
with col2:
    t = st.number_input("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", value=20., step=1., min_value=-100., max_value=200., key ="t", label_visibility="collapsed")

col1, col2  = st.columns(COLS_SIZE, vertical_alignment="center", width = WIDTH)
with col1:  
    RH_d_sel = st.selectbox(
        "–ü–∞—Ä–∞–º–µ—Ç—Ä –≤–ª–∞–∂–Ω–æ—Å—Ç–∏",
        options=["RH, %", "d, –≥/–∫–≥ —Å.–≤."],
        label_visibility="collapsed",
        width=150,
        key="RH_d_sel",
        on_change=update_rh_d_params
        )
with col2:
    RH_d = st.number_input(
        "–ó–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏",
        label_visibility="collapsed",
        value=st.session_state.get("rh_d_value"),
        min_value=st.session_state.get("rh_d_min"),
        max_value=st.session_state.get("rh_d_max"),
        format = st.session_state.get("rh_d_format"),
        step=st.session_state.get("rh_d_step"),
        key="RH_d"
        )

col1, col2  = st.columns(COLS_SIZE, vertical_alignment="center", width = WIDTH)
with col1:  
    st.write("p, –ü–∞")
with col2:
    p = st.number_input("–î–∞–≤–ª–µ–Ω–∏–µ", value=101325.0, step=1., key ="p", label_visibility="collapsed")

s = """
    t - —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–ª–∞–∂–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞, ¬∞–°;\n
    RH - –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å, %;\n
    p - –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –≤–ª–∞–∂–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞, –ü–∞;\n 
    d - –≤–ª–∞–≥–æ—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ, –≥ –Ω–∞ –∫–≥ —Å—É—Ö–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞;\n 
    d1 - –≤–ª–∞–≥–æ—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ, –≥ –Ω–∞ –∫–≥ –≤–ª–∞–∂–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞;\n
    dens - –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –≤–ª–∞–∂–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞, –∫–≥/–º3;\n
    t_wb - —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –º–æ–∫—Ä–æ–≥–æ —Ç–µ—Ä–º–æ–º–µ—Ç—Ä–∞, ¬∞–°;\n
    t_dp - —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ç–æ—á–∫–∏ —Ä–æ—Å—ã, ¬∞–°;\n
    I - —ç–Ω—Ç–∞–ª—å–ø–∏—è –≤–ª–∞–∂–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞, –∫–î–∂/(–∫–≥ —Å—É—Ö–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞);\n
    I1 - —ç–Ω—Ç–∞–ª—å–ø–∏—è –≤–ª–∞–∂–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞, –∫–î–∂/(–∫–≥ –≤–ª–∞–∂–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞);\n
    p_s - –¥–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—ã—â–µ–Ω–∏—è (—É–ø—Ä—É–≥–æ—Å—Ç—å –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞), –ü–∞;\n
    p_st - –ø–∞—Ä—Ü–∏–∞–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞, –ü–∞;\n
    p_cond - –¥–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω–¥–µ–Ω—Å–∞—Ç–∞, –ü–∞
    """


if st.button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å"):
    try:
        result = calc(t, RH_d, p, RH_d_sel)

        # –°–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥ –∫–ª—é—á–µ–π
        key_mapping = {}
        for line in s.strip().split(';\n'):
            if '-' in line:
                old_key, description = line.split('-', 1)
                old_key = old_key.strip()
                description = description.strip().rstrip(';')
                key_mapping[old_key] = description[0].upper() + description[1:]

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å
        data = {key_mapping.get(old_key, old_key): value for old_key, value in result.items()}      
        print_result(data)

    except Exception as e:
        #st.markdown(f":orange-badge[‚ö†Ô∏è {str(e)}]")
        st.error(f"{str(e)}", icon="‚ö†Ô∏è")
with st.expander("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"):
    st.markdown("[–°—Ç–∞—Ç—å—è](https://dzen.ru/a/Yt0vpHeCWWlWEfPq) –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Å–≤–æ–π—Å—Ç–≤ –≤–ª–∞–∂–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞")
#show_footer()